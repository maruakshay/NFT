{"version":3,"sources":["API/ipfs.js","Utils/Web3.js","App/styles.js","App/index.js","index.js"],"names":["client","create","web3","Web3","givenProvider","Contract","eth","ABI","Container","styled","div","Form","Input","input","Image","img","Button","button","InputContainer","App","useState","name","setName","price","setPrice","description","setDescription","check","setCheck","url","setURL","file","a","add","addedData","URL","path","console","log","priceToWei","utils","toWei","getAccounts","Accounts","methods","mintToken","send","from","value","String","htmlFor","type","onChange","e","target","testData","files","accept","src","alt","checked","id","onClick","ReactDOM","render","document","getElementById"],"mappings":"orOAGaA,EAASC,iBAAO,sC,2BCDhBC,EAAO,IAAIC,IAAKA,IAAKC,eAErBC,EAAW,IAAIH,EAAKI,IAAID,SAASE,EADtB,8C,gBCDXC,EAAYC,IAAOC,IAAV,qFAOTC,EAAOF,IAAOC,IAAV,gMAWJE,EAAQH,IAAOI,MAAV,+IAULC,EAAQL,IAAOM,IAAV,+EAMLC,EAASP,IAAOQ,OAAV,4MAcNC,EAAiBT,IAAOC,IAAV,sK,QC0CZS,EAhFH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,OAEUF,mBAAS,GAFnB,mBAETG,EAFS,KAEFC,EAFE,OAGsBJ,mBAAS,IAH/B,mBAGTK,EAHS,KAGIC,EAHJ,OAIUN,oBAAS,GAJnB,mBAITO,EAJS,KAIFC,EAJE,OAKMR,mBAAS,IALf,mBAKTS,EALS,KAKJC,EALI,iDAOhB,WAAwBC,GAAxB,iBAAAC,EAAA,sEAC0BhC,EAAOiC,IAAIF,GADrC,OACQG,EADR,OAEQC,EAFR,sCAE6CD,EAAUE,MACrDN,EAAOK,GAHT,4CAPgB,kEAehB,8BAAAH,EAAA,6DACEK,QAAQC,IAAIjB,EAAMI,EAAaF,EAAOI,GACtCL,EAAQ,IACRM,GAAS,GACTF,EAAe,IACfF,EAAS,GACTM,EAAO,IACDS,EAAarC,EAAKsC,MAAMC,MAAMlB,EAAO,SAP7C,SAQyBrB,EAAKI,IAAIoC,cARlC,cAQQC,EARR,iBASqBtC,EAASuC,QACzBC,UAAUF,EAAS,GAAId,EAAKR,EAAMI,EAAac,EAAYZ,GAC3DmB,KAAK,CAAEC,KAAMJ,EAAS,GAAIK,MAAQ9C,EAAKsC,MAAMC,MAAMQ,OAAO,IAAO,WAXtE,4DAfgB,sBA6BhB,OACE,cAACzC,EAAD,UACE,eAACG,EAAD,WACE,eAACO,EAAD,WACE,uBAAOgC,QAAQ,OAAf,wBACA,cAACtC,EAAD,CACEuC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAO/B,EAAQ+B,EAAEC,OAAON,QAClCA,MAAO3B,OAIX,eAACH,EAAD,WACE,uBAAOgC,QAAQ,cAAf,gCACA,cAACtC,EAAD,CACEuC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAO3B,EAAe2B,EAAEC,OAAON,QACzCA,MAAOvB,OAIX,eAACP,EAAD,WACE,uBAAOgC,QAAQ,QAAf,0BACA,cAACtC,EAAD,CACEuC,KAAK,SACLC,SAAU,SAACC,GAAD,OAAO7B,EAAS6B,EAAEC,OAAON,QACnCA,MAAOzB,OAGX,cAACL,EAAD,UACE,cAACN,EAAD,CACEuC,KAAK,OACLC,SAjDV,SAAqBC,IAZL,oCAadE,CAASF,EAAEC,OAAOE,MAAM,KAiDhBC,OAAO,uCAGX,cAAC3C,EAAD,CAAO4C,IAAK7B,EAAK8B,IAAI,cACrB,eAACzC,EAAD,WACE,uBAAOgC,QAAQ,SAAf,8BACA,uBACEC,KAAK,WACLS,QAASjC,EACTkC,GAAG,SACHT,SAAU,SAACC,GAAD,OAAOzB,EAASyB,EAAEC,OAAOM,eAGvC,cAAC5C,EAAD,CAAQ8C,QA3EE,2CA2EV,+BChFRC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.da34daa3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { create } from 'ipfs-http-client'\n\nexport const client = create('https://ipfs.infura.io:5001/api/v0')\n\n","import Web3 from \"web3\";\nimport ABI from './nft.json'\nexport const web3 = new Web3(Web3.givenProvider);\nconst contractAddress = '0x03BDA11e3ada61602DFc2a17958A46573cc5Ddc3'\nexport const Contract = new web3.eth.Contract(ABI , contractAddress);\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div\n`\ndisplay : grid;\nplace-items : center;\nheight : 100vh;\n`\n\nexport const Form = styled.div\n`\nwidth: 70%;\nmin-height : 300px;\nborder-radius : 18px;\nbox-shadow : 0px 0px 14px grey;\ndisplay : flex;\njustify-content : center;\nflex-direction : column ; \n\n`\nexport const Input = styled.input\n`\nwidth : 90%;\npadding : 10px;\nborder-radius : 20px;\noutline : none;\n&[type=file]{\n    color : transparent;\n}\n`\nexport const Image = styled.img\n`\nwidth : 100px;\nheight : 100px;\nmargin : 0 auto;\n`\nexport const Button = styled.button\n`\nborder : none;\noutline : none;\nwidth : 100px;\nheight : 50px;\nmargin : 10px auto;\ncursor : pointer;\ntransition : opacity linear 0.5s;\n\n&:hover {\n    opacity : 0.8;\n}\n`\nexport const InputContainer = styled.div\n`\nwidth : 90%;\nmargin : 10px auto;\ndisplay : flex;\nflex-direction : column;\n\nlabel {\n    font-size : 24px;\n    padding : 10px 0;\n}\n`","import React, { useState, useEffect } from \"react\";\nimport { client } from \"../API/ipfs\";\nimport { web3, Contract } from \"../Utils/Web3\";\nimport {\n  Form,\n  Input,\n  Container,\n  Image,\n  Button,\n  InputContainer,\n} from \"./styles\";\n\nconst App = () => {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [check, setCheck] = useState(false);\n  const [url, setURL] = useState(\"\");\n\n  async function testData(file) {\n    const addedData = await client.add(file);\n    const URL = `https://ipfs.infura.io/ipfs/${addedData.path}`;\n    setURL(URL);\n  }\n  function handleFiles(e) {\n    testData(e.target.files[0]);\n  }\n  async function handleSubmit() {\n    console.log(name, description, price, check);\n    setName(\"\");\n    setCheck(false);\n    setDescription('')\n    setPrice(0)\n    setURL('')\n    const priceToWei = web3.utils.toWei(price, \"ether\");\n    const Accounts = await web3.eth.getAccounts();\n    const mint = await Contract.methods\n      .mintToken(Accounts[0], url, name, description, priceToWei, check)\n      .send({ from: Accounts[0], value : web3.utils.toWei(String(0.4) , 'ether')});\n    \n  }\n  return (\n    <Container>\n      <Form>\n        <InputContainer>\n          <label htmlFor=\"name\">Token Name</label>\n          <Input\n            type=\"text\"\n            onChange={(e) => setName(e.target.value)}\n            value={name}\n          />\n        </InputContainer>\n\n        <InputContainer>\n          <label htmlFor=\"description\">Token Description </label>\n          <Input\n            type=\"text\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n          />\n        </InputContainer>\n\n        <InputContainer>\n          <label htmlFor=\"price\">Token Price </label>\n          <Input\n            type=\"number\"\n            onChange={(e) => setPrice(e.target.value)}\n            value={price}\n          />\n        </InputContainer>\n        <InputContainer>\n          <Input\n            type=\"file\"\n            onChange={handleFiles}\n            accept=\"image/gif, image/jpeg, image/png\"\n          />\n        </InputContainer>\n        <Image src={url} alt=\"the image\" />\n        <InputContainer>\n          <label htmlFor=\"shared\">can be Shared ? </label>\n          <input\n            type=\"checkbox\"\n            checked={check}\n            id=\"shared\"\n            onChange={(e) => setCheck(e.target.checked)}\n          />\n        </InputContainer>\n        <Button onClick={handleSubmit}>Click here </Button>\n      </Form>\n    </Container>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport  ReactDOM  from \"react-dom\";\nimport './index.css'\nimport App from './App'\n\n\n\nReactDOM.render(<App /> , document.getElementById('root'))"],"sourceRoot":""}